'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245690;245756] простые числа.
 Выведите на экран все найденные простые числа в порядке возрастания, слева от каждого числа выведите его порядковый
 номер в последовательности. Каждая пара чисел должна быть выведена в отдельной строке.'''
# def Simple(n):
#     for i in range(2, n):
#         if n % i == 0:
#             return False
#     return True
#
#
# n = 1
# for j in range(245690, 245757):
#     if Simple(j):
#         print(n, j)
#     n += 1

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457;174505], числа,
имеющие ровно два различных натуральных делителя, не считая единицы и самого числа. Для каждого найденного числа
запишите эти два делителя в два соседних столбца на экране с новой строки в порядке возрастания произведения этих двух
 делителей. Делители в строке также должны следовать в порядке возрастания.'''
# def Delit(n):
#     a = []
#     for i in range(2, n):
#         if n % i == 0:
#             a.append(i)
#     return a
#
#
# for j in range(174457, 174506):
#     d = Delit(j)
#     if len(d) == 2:
#         print(*d)

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [110203;110245], числа,
имеющие ровно четыре различных чётных натуральных делителя (при этом количество нечётных делителей может быть любым).
 Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки. Делители
  в строке должны следовать в порядке возрастания.'''
# def Delit(n):
#     a = []
#     for i in range(1, n + 1):
#         if n % i == 0 and i % 2 == 0:
#             a.append(i)
#     return a
#
#
#
# for j in range(110203,110246):
#     d = Delit(j)
#     if len(d) == 4:
#         print(*d)

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052;84130], число, 
имеющее максимальное количество различных натуральных делителей, если таких чисел несколько— найдите минимальное
 из них. Выведите на экран количество делителей такого числа и само число.'''
# def Delit(n):
#     k = 0
#     for i in range(1, n + 1):
#         if n % i == 0:
#             k += 1
#     return k
#
#
# m = Delit(84052)
# x = 84052
# for j in range(84053, 84131):
#     d = Delit(j)
#     if d > m:
#         m = d
#         x = j
# print(m, x)

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые
 числа. Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по
  порядку, считая, что первое найденное число имеет номер «1», второе— «2», и т.д.'''
# from  math import *
# def Simple(n):
#     for i in range(2, 1 + int(sqrt(n))):
#         if n % i == 0:
#             return False
#     return True
#
#
# n = 1
# for x in range(2422000, 2422081):
#     if Simple(x):
#         print(n, x)
#         n += 1


'''Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу. Например, у числа 
6 есть два нетривиальных делителя: 2 и 3. Найдите все натуральные числа, принадлежащие отрезку [123456789;223456789] и 
имеющие ровно три нетривиальных делителя. Для каждого найденного числа запишите в ответе его наибольший нетривиальный 
делитель. Ответы расположите в порядке возрастания.'''

# from math import *
# def Delit(n):
#     a = []
#     k = 0
#     for i in range(2, int(sqrt(n))):
#         if n % i == 0:
#             a.append(i)
#             a.append(n // i)
#             a = list(set(a)) # мы используем сет, все элементы перемешиваются. Почему тогда d[-1] работает
#             k = len(a)
#             if k > 3:
#                 return a
#     return a
#
# 
# for j in range(131079601, 223456790):
#     d = Delit(j)
#     if len(d) == 3:
#         print(j, d[-1])

'''Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух 
натуральных чисел и найдём для каждого такого произведения разность сомножителей. Например, для числа 16 получим: 
16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0. Найдите все натуральные числа, принадлежащие отрезку 
[1000000;2000000], у которых составленное описанным способом множество разностей будет содержать не меньше трёх
 элементов, не превышающих 100. В ответе перечислите найденные числа в порядке возрастания.'''
# from math import *
# def f(x):
#     a = []
#     for i in range(1, int(sqrt(x))):
#         if x % i == 0:
#             r = x // i - i
#             if r <= 100:
#                 a.append(r)
#                 if len(a) >= 3:
#                     return a
#     return a
#
#
# for x in range(1000000, 2000001):
#     if len(f(x)) >= 3:
#         print(x)


'''Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу. Например, у числа
 6 есть два нетривиальных делителя: 2 и 3. Найдите все натуральные числа, принадлежащие отрезку [289123456;389123456] 
 и имеющие ровно три нетривиальных делителя. Для каждого найденного числа запишите в ответе его наибольший нетривиальный
делитель. Ответы расположите в порядке возрастания.'''
# from math import *
# def F(x):
#     a = []
#     k = 0
#     for i in range(2, int(sqrt(x)) + 1):
#         if x % i == 0:
#             a.append(i)
#             a.append(x // i)
#             k += 1
#         if k == 3:
#             return a
#     return a
#
#
# for i in range(289123456, 389123457):
#     d = F(i)
#     if len(d) == 3:
#         print(i, max(d))
# from math import *
# def Delit(n):
#     a = []
#     k = 0
#     q = int(sqrt(n))
#     for i in range(2, q):
#         if n % i == 0:
#             a.append(i)
#             a.append(n // i)
#             k += 1
#             if k > 3:
#                 return a
#     if n % q == 0:
#         a.append(q)
#     return a
#
#
# for j in range(294499921, 294499924):
#     d = Delit(j)
#     if len(d) == 3:
#         d.sort()
#         print(j, d[-1])

'''Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух
 натуральных чисел и найдём для каждого такого произведения разность сомножителей. Например, для числа 16 получим: 
 16=16*1=8*2=4*4, множество разностей содержит числа 15, 6 и 0. Найдите все натуральные числа, принадлежащие отрезку 
[2000000;3000000], у которых составленное описанным способом множество разностей будет содержать не меньше трёх 
элементов, не превышающих 115. В ответе перечислите найденные числа в порядке возрастания.'''

# from math import *
# def f(x):
#     a = []
#     for i in range(1, int(sqrt(x))):
#         if x % i == 0:
#             r = x // i - i
#             if r <= 115:
#                 a.append(r)
#                 if len(a) >= 3:
#                     return a
#     return a
#
#
# for x in range(1000000, 2000001):
#     if len(f(x)) >= 3:
#         print(x)

'''Найдите все натуральные числа N, принадлежащие отрезку [200000000;400000000], которые можно представить в виде 
N=2^m·3^n, где m— чётное число, n— нечётное число. В ответе запишите все найденные числа в порядке возрастания.'''

# def Stepen(x):
#     m = 0
#     n = 0
#     while x % 3 == 0:
#         n += 1
#         x //= 3
#     if n % 2 == 0:
#         return False
#     while x % 2 == 0:
#         m += 1
#         x //= 2
#     if x != 1 or m % 2 == 1:   # почему тут or
#         return False
#     return True
#
# for i in range(200000000, 400000001):
#     if Stepen(i):
#         print(i)

'''Пусть M— сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа. 
Если таких делителей у числа нет, то считаем значение M равным нулю.
Напишите программу, которая перебирает целые числа, большие 452021, в порядке возрастания и ищет среди них такие, для 
которых значение M при делении на 7даёт в остатке 3. Вывести первые 5 найденных чисел и соответствующие им 
значения M.
Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число,
 затем— значение М. Строки выводятся в порядке возрастания найденных чисел.
Например, для числа 20 М=2+10=12, остаток при делении на 7 не равен 3; для числа 21 М=3+7=10, остаток при делении
 на 7 равен 3.'''
# def search(x):
#     m = 0
#     for i in range(2, x):
#         if x % i == 0:
#             return i + x // i
#     return m
#
#
# k = 0
# x = 452022
# while k < 5:
#     m = search(x)
#     if m != 0 and m % 7 == 3:
#         print(x, m)
#         k += 1
#     x += 1


'''Найдите все натуральные числа N, принадлежащие отрезку [400000000;600000000], которые можно представить в виде
 N=2^m·3^n, где m— чётное число, n— нечётное число. В ответе запишите все найденные числа в порядке возрастания.'''

# def Stepen(x):
#     m = 0
#     n = 0
#     while x % 3 == 0:
#         n += 1
#         x //= 3
#     if n % 2 == 0:
#         return False
#     while x % 2 == 0:
#         m += 1
#         x //= 2
#     if x != 1 or m % 2 == 1:
#         return False
#     return True
#
#
# for i in range(400000000, 600000001):
#     if Stepen(i):
#         print(i)


'''Напишите программу, которая перебирает целые числа, большие 600000, в порядке возрастания и ищет среди них такие,
среди делителей которых есть хотя бы одно число, оканчивающееся на 7, но не равное 7 и самому числу. Необходимо вывести
первые 5 таких чисел, и наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.
Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем— наименьший
 делитель, оканчивающийся на 7, не равный 7 и самому числу. Строки выводятся в порядке возрастания найденных чисел.
Количество строк в таблице для ответа избыточно.'''

# def Delit(x):
#     for i in range(2, x // 2 + 1):
#         if x % i == 0 and i % 10 == 7 and i != 7:
#             return i
#     return False
#
#
# g = 600001
# k = 0
# while k < 5:
#     m = Delit(g)
#     if m:
#         k += 1
#         print(g, m)
#     g += 1


'''Пусть M— сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа. 
Если таких делителей у числа нет, то значение M считается равным нулю.
Напишите программу, которая перебирает целые числа, бо́льшие 700000, в порядке возрастания и ищет среди них такие, для 
которых значение M оканчивается на 8. Выведите первые пять найденных чисел и соответствующие им значения M.
Формат вывода: для каждого из пяти таких найденных чисел в отдельной строке сначала выводится само число, затем— 
значение М.
Строки выводятся в порядке возрастания найденных чисел.'''


# def Delit(x):
#     m = 0
#     for i in range(2, x // 2 + 1):
#         if x % i == 0:
#             return i + x // i
#     return m
#
#
# g = 700001
# k = 0
# while k < 5:
#     m = Delit(g)
#     if m - (m // 10) * 10 == 8 and m != 0:
#         k += 1
#         print(g, m)
#     g += 1

'''Найдите 5 чисел больших 500000, таких, что среди их делителей есть число, оканчивающееся на 8, при этом этот делитель
не равен 8 и самому числу. В качестве ответа приведите 5 наименьших чисел, соответствующих условию.
Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем минимальный
делитель, оканчивающийся на 8, не равный 8 и самому числу.'''

# def Delit(x):
#     for i in range(1, x // 2 + 1):
#         if x % i == 0 and i != 8 and i % 10 == 8:
#             return i
#     return False
#
#
# k = 0
# g = 500001
# while k < 5:
#     m = Delit(g)
#     if m:
#         k += 1
#         print(g, m)
#     g += 1


'''Пусть M(N)— произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы. Если 
у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
Найдите 5 наименьших натуральных чисел, превышающих 200000000, для которых0<M(N)<N. В ответе запишите найденные 
значения M(N) в порядке возрастания соответствующих им чисел N.'''

# def Find_m(x):
#     m = 1
#     k = 0
#     for i in range(2, x + 1):
#         if x % i == 0:
#             k += 1
#             m *= i
#             if k == 5:
#                 return m
#     return 0
#
#
# g = 200000001
# k = 0
# while k < 5:
#     m = Find_m(g)
#     if 0 < m < g:
#         print(m)
#         k += 1
#     g += 1


'''Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа. 
Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
Найдите 5 наименьших натуральных чисел, превышающих 10000000, для которых 0<M(N)<10000. В ответе запишите найденные 
значения M(N) в порядке возрастания соответствующих им чиселN.'''
# def Delit(n):
#     a = []
#     for i in range(1, n // 2 + 1):
#         if n % i == 0:
#             a.append(i)
#             if len(a) >= 2:
#                 return a[-1] + a[-2]   # почему это решение не работает
#     return 0
#
#
# k = 0
# i = 10000001
# while k < 5:
#     d = Delit(i)
#     if 0 < d < 10000:
#         print(d)
#         k += 1
#     i += 1


# def Find_m(x):
#     m = 0
#     k = 0
#     for i in range(x // 2, 0, -1):
#         if x % i == 0:
#             k += 1
#             m += i
#             if k == 2:
#                 return m
#     return 0
#
#
# g = 10000001
# k = 0
# while k < 5:
#     m = Find_m(g)
#     if 0 < m < 10000:
#         k += 1
#         print(m)
#     g += 1


'''Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую 
последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
Среди натуральных чисел, не превышающих 10^9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 
23 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце— 
соответствующие им результаты деления этих чисел на 23.
Количество строк в таблице для ответа избыточно.'''

# for i in range(123450708, 123459799):
#     s = str(i)
#     if s[0:5] == '12345' and s[6] == '7' and s[8] == '8' and i % 23 == 0:
#         print(i, i // 23)


'''Пусть M(N)— пятый по величине делитель натурального числа N без учёта самого числа и единицы. Например, 
M(1000)=100.
Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)=0.
Найдите 5 наименьших натуральных чисел, превышающих 460000000, для которых M(N)>0. В ответе запишите найденные 
значения M(N) в порядке возрастания соответствующих им чисел N'''

# def Find_m(x):
#     k = 0
#     for i in range(2, x // 2 + 1):
#         if x % i == 0:
#             k += 1
#             if k == 5:
#                 return i
#     return 0
#
#
# g = 460000001
# k = 0
# while k < 5:
#     m = Find_m(g)
#     if m > 0:
#         print(m)
#         k += 1
#     g += 1


'''Пусть M(N)— произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы. Если 
у числа N меньше 5 таких делителей, то M(N) считается равным нулю.
Найдите 5 наименьших натуральных чисел, превышающих 500000000, для которых0<M(N)<N. В ответе запишите найденные
 значения M(N) в порядке возрастания соответствующих им чиселN.'''

# def Delit_m(x):
#     k = 0
#     m = 1
#     for i in range(2, x + 1):
#         if x % i == 0:
#             m *= i
#             k += 1
#             if k == 5:
#                 return m
#     return 0
#
#
# g = 500000001
# k = 0
# while k < 5:
#     m = Delit_m(g)
#     if 0 < m < g:
#         print(m)
#         k += 1
#     g += 1

'''Пусть M(N)— сумма двух наибольших различных натуральных делителей натурального числа N, не считая самого числа и 
единицы. Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
Найдите 5 наименьших натуральных чисел, превышающих 11000000, для которых 0<M(N)<10000. В ответе запишите найденные 
значения M(N) в порядке возрастания соответствующих им чиселN.'''
# def Find_m(x):
#     m = 0
#     k = 0
#     for i in range(x // 2, 1, -1):
#         if x % i == 0:
#             m += i
#             k += 1
#             if k == 2:
#                 return m
#     return 0
#
#
# g = 11000001
# k = 0
# while k < 5:
#     m = Find_m(g)
#     if 0 < m < 10000:
#         print(m)
#         k += 1
#     g += 1


'''Пусть M(N)— пятый по величине делитель натурального числа N без учёта самого числа и единицы. Например, M(1000)=100.
Если у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)=0.
Найдите 5 наименьших натуральных чисел, превышающих 300000000, для которых M(N)>0. В ответе запишите найденные значения 
M(N) в порядке возрастания соответствующих им чисел N.'''

# def Find_m(x):
#     k = 0
#     for i in range(x // 2, 1, -1):
#         if x % i == 0:
#             k += 1
#             if k == 5:
#                 return i
#     return 0
#
#
# g = 300000001
# k = 0
# while k < 5:
#     m = Find_m(g)
#     if m > 0:
#         print(m)
#         k += 1
#     g += 1


'''Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую 
последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
Среди натуральных чисел, не превышающих 10^10, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без
 остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце— 
 соответствующие им результаты деления этих чисел на 2023.
 '''

# for i in range(2023, 1921399994, 2023):
#     s = str(i)
#     if s[0] == '1' and s[2:6] == '2139' and s[-1] == 4 and i % 2023 == 0:
#         print(i, i // 2023)


'''(№ 4410) (Л. Шастин) Среди чисел, больших 520000, найти такие, для которых сумма всех нетривиальных делителей
 (не считая единицы и самого числа) образует число-палиндром (например, число 1221: если его «перевернуть», получается 
 то же самое число). Вывести первые пять чисел, удовлетворяющих вышеописанному условию, справа от каждого числа вывести 
 его максимальный нетривиальный делитель.'''
# def P(x):
#     m = 1
#     for i in range(2, 1 + x // 2):
#         if x % i == 0:
#             m += i
#     m = str(m)
#     if m == m[::-1]:  # почему не работает
#         return m
#     return 0
#
#
# k = 0
# i = 520001
# while k < 5:
#     d = P(i)
#     if d:
#         print(i)
#         k += 1
#     i += 1

# def Palendrom(x):
#     k = 0
#     s = str(x)
#     n = len(s)
#     if s[0:] == s[::-1]:
#         return True
#     return False
#
#
# def Cheak(x):
#     s = 0
#     k = 0
#     for i in range(2, x - 1):
#         if x % i == 0:
#             s += i
#             k = i
#     if Palendrom(s):
#         return k
#     else:
#         return 0
#
#
# g = 520211
# h = 0
# while h < 5:
#     l = Cheak(g)
#     if l != 0:
#         h += 1
#         print(g, l)
#     g += 1







