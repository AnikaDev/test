'''Исполнитель А16 преобразует число, записанное на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 2
3.Умножить на 2
Первая из них увеличивает число на экране на 1, вторая увеличивает его на 2, третья умножает его на 2.
Программа для исполнителя А16 – это последовательность команд.
Сколько существует таких программ, которые исходное число 3 преобразуют в число 12 и при этом траектория вычислений
 программы содержит число 10?
Траектория вычислений программы— это последовательность результатов выполнения всех команд программы. Например,
для программы 132 при исходном числе 7 траектория будет состоять из чисел 8, 16, 18.'''
# def F(a, b):
#     if a == b:
#         return 1
#     if a > b:
#         return 0
#     return F(a + 1, b) + F(a + 2, b) + F(a * 2, b)
#
# print(F(3, 10) * F(10, 12))
# print(F(3, 12) - F(3, 10) * F(10, 12))

'''Исполнитель Май17 преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 3
Первая команда увеличивает число на экране на 1, вторая увеличивает его на 3. Программа для исполнителя Май17— 
это последовательность команд.
Сколько существует программ, для которых при исходном числе 1 результатом является число 17 и при этом траектория 
вычислений содержит число 9? Траектория вычислений программы— это последовательность результатов выполнения всех команд 
программы. Например, для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 11, 12.
Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 29 ноября 2016 года Вариант ИН10203'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a + 3, b)
#
#
# print(F(1, 9) * F(9, 17))

'''Исполнитель М17 преобразует число, записанное на экране. У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 2
3.Умножить на 3
Первая из них увеличивает число на экране на 1, вторая увеличивает его на 2, третья умножает на 3. Программа для 
исполнителя М17 – это последовательность команд. Сколько существует таких программ, которые преобразуют исходное число 
2 в число 12 и при этом траектория вычислений программы содержит числа 8 и 10? Траектория должна содержать оба
 указанных числа.
Траектория вычислений программы – это последовательность результатов выполнения всех команд программы. Например, для 
программы 132 при исходном числе 7 траектория будет состоять из чисел 8, 24, 26.
Источник: Демонстрационная версия ЕГЭ—2018 по информатике.'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a + 3, b) + F(a * 3, b)
#
#
# print(F(2, 8) * F(8, 10) * F(10, 12))

'''
1. прибавь 1
2. сделай нечётное
 Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. Например, вторая
 команда переводит число 10 в число 21. Программа для исполнителя НечетМ – это последовательность команд. Сколько
существует таких программ, которые число 1 преобразуют в число 27, причём траектория вычислений не содержит число 26? 
Траектория вычислений программы – это последовательность результатов выполнения всех команд программы. Например, 
для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 17, 18.'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(2 * a + 1, b)
#
#
# print(F(1, 27) - F(1, 26) * F(26, 27))

'''Исполнитель Фибо преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 2
Первая команда увеличивает число на экране на 1, вторая увеличивает его на 2.
Программа для исполнителя Фибо— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 3в число 20 и при этом траектория вычислений содержит 
число 9 и не содержит числа 15?
Траектория вычислений— это последовательность результатов выполнения всех команд программы. Например, для программы 
212 при исходном числе 7 траектория будет состоять из чисел 9, 10, 12.'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a + 2, b)
#
#
# print(F(3, 9) * F(9, 20) - F(3, 9) * F(9, 15) * F(15, 20))

'''Исполнитель Тренер преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1. Прибавить 1
2.Умножить на 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 2. Программа для исполнителя Тренер— это 
последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 40 и при этом траектория вычислений содержит 
числа 12 и 25?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(1, 12) * F(12, 25) * F(25, 40))

'''Исполнитель Вычислитель преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 2
2.Умножить на 2
3.Прибавить 3
Первая команда увеличивает число на экране на 2, вторая умножает его на 2, третье увеличивает его на 3.
Программа для исполнителя Вычислитель— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 2 в число 22 и при этом траектория вычислений содержит
число 11?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 2, b) + F(a * 2, b) + F(a + 3, b)
#
#
# print(F(2, 11) * F(11, 22))

'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Прибавить 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 3.
Программа для исполнителя РазДваТри— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 2 в число 14 и при этом траектория вычислений содержит
число 10?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a + 3, b)
#
#
# print(F(2, 10) * F(10, 14))

'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Прибавить 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 3.
Программа для исполнителя РазДваТри— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 3 в число 16 и при этом траектория вычислений содержит
число 12?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a + 3, b)
#
#
# print(F(3, 12) * F(12, 16))

'''Исполнитель РазДва преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
Программа для исполнителя РазДва— это последовательность команд.
Сколько существует программ, для которых при исходном числе 3 результатом является число 37 и при этом траектория 
вычислений содержит число 18?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(3, 18) * F(18, 37))

'''Исполнитель преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 2. Программа для исполнителя – 
это последовательность команд.
Сколько существует программ, для которых при исходном числе 2 результатом является число 29 и при этом траектория
вычислений содержит число 14?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(2, 14) * F(14, 29))

'''471 Добавить в вариант
Исполнитель НечетМ преобразует число на экране. У исполнителя НечетМ две команды, которым присвоены номера:
1.прибавь 1
2.сделай нечётное
Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. Например, вторая 
команда переводит число 10 в число 21. Программа для исполнителя НечетМ— это последовательность команд. Сколько 
существует таких программ, которые число 1 преобразуют в число 25, причём траектория вычислений не содержит число 24?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2 + 1, b)
#
#
# print(F(1, 25) - F(1, 24) * F(24, 25))

'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Прибавить 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 3.
Программа для исполнителя РазДваТри— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 3 в число 16 и при этом траектория вычислений не 
содержит чисел 6 и 12?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a + 3, b)
#
#
# print(F(3, 16) - F(3, 6) * F(6, 12) * F(12, 16) - (F(3, 6) * F(6, 16) - F(3, 6) * F(6, 12) * F(12, 16))\
#       - (F(3, 12) * F(12, 16) - F(3, 6) * F(6, 12) * F(12, 16)))


'''Исполнитель Фибо преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 2
Первая команда увеличивает число на экране на 1, вторая увеличивает его на 2.
Программа для исполнителя Фибо— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 2 в число 18 и при этом траектория вычислений содержит
число 9 и не содержит числа 14?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a + 2, b)
#
#
# print(F(2, 9) * F(9, 18) - F(2, 9) * F(9, 14) * F(14, 18))

'''Исполнитель Калькулятор преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
Программа для исполнителя Калькулятор – это последовательность команд. Сколько существует программ, для которых при 
исходном числе 1 результатом является число 21, при этом траектория вычислений содержит число 10 и не содержит число 17?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(1, 10) * F(10, 21) - F(1, 10) * F(10, 17) * F(17, 21))

'''У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
Программа для исполнителя ТР4— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 3 в число 37 и при этом траектория вычислений содержит 
число 16 и не содержит числа 33?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(3, 16) * F(16, 37) - F(3, 16) * F(16, 33) * F(33, 36))

'''Исполнитель ТР4 преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
Программа для исполнителя ТР4— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 2 в число 35 и при этом траектория вычислений содержит 
число 15 и не содержит числа 31?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(2, 15) * F(15, 35) - F(2, 15) * F(15, 31) * F(31, 35))

'''Исполнитель Вычислитель преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1. Прибавить 1.
2. Умножить на 2.
Первая команда увеличивает число на экране на 1, вторая умножает его на 2.
Программа для Вычислителя— это последовательность команд.
Сколько существует программ, для которых при исходном числе 1 результатом является число 21 и при этом траектория
вычислений содержит число 10 и не содержит числа 16?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# print(F(1, 10) * F(10, 21) - F(1, 10) * F(10, 16) * F(16, 21))

'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Умножить на 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья умножает его на 3.
Программа для исполнителя РазДваТри— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 2 в число 44 и при этом траектория вычислений содержит 
число 13 и не содержит числа 29?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a * 3, b)
#
#
# print(F(2, 13) * F(13, 44) - F(2, 13) * F(13, 29) * F(29, 44))

'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Умножить на 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья умножает его на 3.
Программа для исполнителя РазДваТри— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 3 в число 50 и при этом траектория вычислений содержит 
число 15 и не содержит числа 33?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a * 3, b)
#
#
# print(F(3, 15) * F(15, 50) - F(3, 15) * F(15, 33) * F(33, 50))

'''Исполнитель РазДваПять преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Прибавить 5
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 5.
Программа для исполнителя РазДваПять— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 16, и при этом траектория вычислений содержит 
число 8 и не содержит числа 10?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a + 5, b)
#
#
# print(F(1, 8) * F(8, 16) - F(1, 8) * F(8, 10) * F(10, 16))

'''Исполнитель РазДваПять преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Прибавить 5
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья увеличивает на 5.
Программа для исполнителя РазДваПять— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 18, и при этом траектория вычислений содержит 
число 9 и не содержит числа 11?'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b) + F(a + 5, b)
#
#
# print(F(1, 9) * F(9, 18) - F(1, 9) * F(9, 11) * F(11, 18))


'''Исполнитель Вычислитель преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 3
3.Прибавить 2
Первая команда увеличивает число на экране на 1, вторая умножает его на 3, третья увеличивает его на 2.
Программа для исполнителя Вычислитель— это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 15 и при этом траектория вычислений содержит
числа 10 и 12?
Траектория вычислений программы— это последовательность результатов выполнения всех команд программы. Например, для 
программы 132 при исходном числе 7 траектория будет состоять из чисел 8, 10, 30.'''
# def F(a, b):
#     if a > b:
#         return 0
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 3, b) + F(a + 2, b)
#
#
# print(F(1, 10) * F(10, 12) * F(12, 15))

'''Исполнитель РазДва преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:
1. Прибавить 1
2.Умножить на 2 
Первая команда увеличивает число на экране на 1, вторая умножает его на 2. Программа для исполнителя РазДва— это 
последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 20, и при этом траектория вычислений содержит
ровно одно из чисел 9 и 10?
Траектория вычислений— это последовательность результатов выполнения всех команд программы. Например, для программы 212
при исходном числе 4 траектория будет состоять из чисел 8, 9, 18.'''
# def F(a, b):
#     if a > b or a == 9:
#         return False
#     if a == b:
#         return 1
#     return F(a + 1, b) + F(a * 2, b)
#
#
# def F2(a, b):
#     if a > b or a == 10:
#         return False
#     if a == b:
#         return 1
#     return F2(a + 1, b) + F2(a * 2, b)
#
#
# print(F(1, 10) * F(10, 20) + F2(1, 9) * F2(9, 20))


'''Исполнитель РазДваТри преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1.Прибавить 1
2.Умножить на 2
3.Умножить на 3
Первая команда увеличивает число на экране на 1, вторая умножает его на 2, третья умножает на 3.
Программа для исполнителя РазДваТри— это последовательность команд. Сколько существует программ, которые преобразуют
исходное число 1 в число 40, и при этом траектория вычислений содержит число 12 и не содержит числа 14?
Траектория вычислений— это последовательность результатов выполнения всех команд программы. Например, для 
программы 312 при исходном числе 3 траектория будет состоять из чисел 9, 10, 20.'''
# def F(a, b):
#     if a > b or a == 14:
#         return False
#     if a == b:
#         return True
#     return F(a + 1, b) + F(a * 2, b) + F(a * 3, b)
#
#
# print(F(1, 12) * F(12, 40))


