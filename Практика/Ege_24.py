'''Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите максимальное количество идущих подряд
символов, среди которых каждые два соседних различны.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью
данного алгоритма.'''
# f = open('24_1.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# max1 = 0
# k = 1
# for i in range(1, n):
#     if s[i] != s[i - 1]:
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите длину самой длинной последовательности, 
состоящей из символов X. Хотя бы один символ X находится в последовательности.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_2.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# max1 = 0
# k = 0
# for i in range(n):
#     if s[i] == 'X':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)
'''Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите максимальную длину цепочки вида XYZXYZXYZ... 
(составленной из фрагментов XYZ, последний фрагмент может быть неполным).
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью
 данного алгоритма'''
# f = open('24_5.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# max1 = 0
# k = 0
# i = 0
# while i < n - 2:
#     if a[i] == 'X':
#         if a[i + 1] == 'Y':
#             if a[i + 2] == 'Z':
#                 k += 3
#                 i += 3
#             else:
#                 k += 2
#                 max1 = max(k, max1)
#                 k = 0
#                 i += 2
#         else:
#             k += 1
#             max1 = max(k, max1)
#             k = 0
#             i += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
#         i += 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите длину самой длинной последовательности, 
состоящей из символов Y. Хотя бы один символ Y находится в последовательности.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_3.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# max1 = 0
# k = 0
# for i in range(n):
#     if a[i] == 'Y':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите длину самой длинной последовательности, 
состоящей из символов Z. Хотя бы один символ Z находится в последовательности.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_4.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# k = 0
# max1 = 0
# for i in range(n):
#     if a[i] == 'Z':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное количество идущих подряд 
символов, среди которых каждые два соседних различны.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_6.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# k = 1
# max1 = 0
# for i in range(n):
#     if a[i] != a[i - 1]:
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное количество идущих подряд 
символов A.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_7.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# k = 0
# max1 = 0
# for i in range(n):
#     if a[i] == 'A':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное количество идущих подряд
символов B.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_8.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# k = 0
# max1 = 0
# for i in range(n):
#     if a[i] == 'B':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное количество идущих подряд 
символов C.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_9.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# k = 0
# max1 = 0
# for i in range(n):
#     if a[i] == 'C':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальную длину цепочки вида ABABAB... 
(составленной из фрагментов AB, последний фрагмент может быть неполным).
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_10.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# k = 0
# max1 = 0
# i = 0
# n = len(a)
# while i < n - 1:
#     if a[i] == "A":
#         if a[i + 1] == "B":
#             k += 2
#             i += 2
#         else:
#             max1 = max(k, max1)
#             i += 1
#             k = 0
#     else:
#         max1 = max(k, max1)
#         i += 1
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл состоит не более чем из 106 символов L, D и R. Определите длину самой длинной последовательности,
состоящей из символов D. Хотя бы один символ D находится в последовательности.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью
 данного алгоритма.'''
# f = open('24_13.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# max1 = 0
# k = 0
# n = len(s)
# for i in range(n):
#     if s[i] == 'D':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только 
заглавные буквы латинского алфавита (ABC…Z). Определите количество строк, в которых буква E встречается чаще, чем 
буква A.'''
# f = open('24_16.txt', 'r', encoding='utf-8')
# k = 0
# for line in f:
#     if line.count('E') > line.count('A'):
#         k += 1
# f.close()
# print(k)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ, который чаще всего 
встречается в файле сразу после буквы A.
Например, в тексте ABCAABADDD после буквы A два раза стоит B, по одному разу— A и D. Для этого текста ответом будет B.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_18.txt', 'r', encoding='utf-8')
# s = f.readline()
# alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
# count = [0] * 26
# n = len(s)
# for i in range(n - 1):
#     if s[i] == 'A':
#         p = alf.find(s[i + 1])
#         count[p] += 1
# max1 = max(count)
# ind = count.index(max1)
# print(alf[ind])

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ, который чаще всего 
встречается в файле между двумя одинаковыми символами.
Например, в тексте CBCABABACCC есть комбинации CBC, ABA (два раза), BAB и CCC. Чаще всего— 3 раза— между двумя
 одинаковыми символами стоит B, в ответе для этого случая надо написать B.'''
# f = open('24_20.txt', 'r', encoding='utf-8')
# s = f.readline()
# alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
# count = [0] * 26
# n = len(s)
# for i in range(n - 2):
#     if s[i] == s[i + 2]:
#         p = alf.find(s[i + 1])
#         count[p] += 1
# max1 = max(count)
# ind = count.index(max1)
# print(alf[ind])

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ, который чаще всего 
встречается в файле после двух одинаковых символов.
Например, в тексте CCCBBABAABCC есть комбинации CCC, CCB, BBA и AAB. Чаще всего— 2 раза— после двух одинаковых символов
стоит B, в ответе для этого случая надо написать B.'''
# f = open('24_20.txt', 'r', encoding='utf-8')
# f = open('24_20.txt', 'r', encoding='utf-8')
# s = f.readline()
# alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
# count = [0] * 26
# n = len(s)
# for i in range(n - 2):
#     if s[i] == s[i + 1]:
#         p = alf.find(s[i + 2])
#         count[p] += 1
# max1 = max(count)
# ind = count.index(max1)
# print(alf[ind])

'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только 
заглавные буквы латинского алфавита (ABC…Z).
Необходимо найти строку, содержащую наименьшее количество букв G (если таких строк несколько, надо взять ту, которая
находится в файле раньше), и определить, какая буква встречается в этой строке чаще всего. Если таких букв несколько, 
надо взять ту, которая позже стоит в алфавите.'''
def F(x):
    alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'






















# def Search(s):
#     alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
#     alf = sorted(alf)
#     k = [0] * 26
#     for i in range(26):
#         k[i] = s.k(alf[i])     # данная строчка
#     max1 = k[0]
#     ind = 0
#     for i in range(1, 26):
#         if k[i] >= max1:
#             max1 = k[i]
#             ind = i
#     return alf[ind]
#
#
# min1 = 100000000
# s = ''
# f = open('24_22.txt', 'r', encoding='utf-8')
# for line in f:
#     if line.count('G') < min1:
#         min1 = line.count('G')
#         s = line
# f.close()
# print(Search(s))

'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только
 заглавные буквы латинского алфавита (ABC…Z).
В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между одинаковыми буквами в 
одной строке.'''
# def Search(s):
#     alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
#     count = [0] * 26
#     for i in range(26):
#         p1 = s.find(alf[i])
#         p2 = s.rfind(alf[i])
#         if p1 != p2:
#             count[i] = p2 - p1
#     return max(count)
#
#
# max1 = 0
# f = open('24_24.txt', 'r', encoding='utf-8')
# for line in f:
#     if line.count('A') < 25:
#         max1 = max(max1, Search(line))
# print(max1)


'''Текстовый файл состоит не более, чем из 107 строчных букв английского алфавита. Найдите максимальную длину подстроки,
в которой символы «a» и «d» не стоят рядом.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_28.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# max1 = 1
# k = 1
# n = len(s)
# for i in range(1, n):
#     if (s[i] == 'd' and s[i-1] == 'a') or (s[i - 1] == 'd' and s[i] == 'a'):
#         max1 = max(k, max1)
#         k = 1
#     else:
#         k += 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите максимальное количество идущих
подряд символов, среди которых не более одной буквы A.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''

# f = open('24_30.txt', 'r', encoding='utf-8')
# a = f.readline()
# f.close()
# n = len(a)
# max1 = 0
# k = 0
# p = 0
# for i in range(n):
#     if a[i] == 'A':
#         max1 = max(max1, k + p + 1)
#         p = k
#         k = 0
#     else:
#         k += 1
# max1 = max(max1, k + p + 1)
# print(max1)
'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только 
заглавные буквы латинского алфавита (ABC…Z).
Необходимо найти строку, содержащую наименьшее количество букв G (если таких строк несколько, надо взять ту, которая 
находится в файле раньше), и определить, какая буква встречается в этой строке чаще всего. Если таких букв несколько,
надо взять ту, которая позже стоит в алфавите.
Пример. Исходный файл:
GIGA
GABLAB
AGAAA
В этом примере в первой строке две буквы G, во второй и третьей— по одной. Берём вторую строку, т.к. она находится в 
файле раньше. В этой строке чаще других встречаются буквы A и B (по два раза), выбираем букву B, т.к. она позже стоит в 
алфавите. В ответе для этого примера надо записать B.'''

# def Search(s):
#     alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
#     alf = sorted(alf)
#     c = [0] * 26
#     for i in range(26):
#         c[i] = s.count(alf[i])
#     max1 = c[0]
#     ind = 0
#     for i in range(1, 26):
#         if c[i] >= max1:
#             max1 = c[i]
#             ind = i
#     return alf[ind]
#
#
# min1 = 100000000
# s = ''
# f = open('24_22.txt', 'r', encoding='utf-8')
# for line in f:
#     if line.count('G') < min1:
#         min1 = line.count('G')
#         s = line
# f.close()
# print(Search(s))
'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только 
заглавные буквы латинского алфавита (ABC…Z).
Необходимо найти строку, содержащую наименьшее количество букв N (если таких строк несколько, надо взять ту, которая 
находится в файле раньше), и определить, какая буква встречается в этой строке чаще всего. Если таких букв несколько,
надо взять ту, которая позже стоит в алфавите.
Пример. Исходный файл:
 NINA
NABLAB
ANAAA
 В этом примере в первой строке две буквы N, во второй и третьей— по одной. Берём вторую строку, т.к. она находится в
файле раньше. В этой строке чаще других встречаются буквы A и B (по два раза), выбираем букву B, т.к. она позже стоит в 
алфавите. В ответе для этого примера надо записать B.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# def Search(s):
#     alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
#     alf = sorted(alf)
#     c = [0] * 26
#     for i in range(26):
#         c[i] = s.count(alf[i])
#     max1 = c[0]
#     ind = 0
#     for j in range(1, 26):
#         if c[j] >= max1:
#             max1 = c[j]
#             ind = j
#     return alf[ind]
#
#
# min1 = 100000000
# s = ''
# f = open('24_23.txt', 'r', encoding='utf-8')
# for line in f:
#     if line.count('N') < min1:
#         min1 = line.count('N')
#         s = line
# f.close()
# print(Search(s))

'''Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z. Определите максимальное количество идущих подряд
символов, среди которых нет подстроки XZZY. Для выполнения этого задания следует написать программу. Ниже приведён файл,
который необходимо обработать с помощью данного алгоритма.'''
# f = open('24_25.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# k = 0
# max1 = 0
# for i in range(n - 1):
#     if s[i] == 'X' and s[i + 1] == 'Z' and s[i + 2] == 'Z' and s[i + 3] == 'Y':
#         max1 = max(k, max1)
#         k = 3
#     else:
#         k += 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. Строки содержат только 
заглавные буквы латинского алфавита (ABC…Z).
В строках, содержащих менее 25 букв G, нужно определить и вывести максимальное расстояние между одинаковыми буквами в 
одной строке.
Пример. Исходный файл:
GIGA
GABLAB
NOTEBOOK
AGAAA
В этом примере во всех строках меньше 25 букв G. Самое большое расстояние между одинаковыми буквами— в третьей строке 
между буквами O, расположенными в строке на 2-й и 7-й позициях. В ответе для данного примера нужно вывести число 5.'''
# def Search(s):
#     alf = 'QWERTYUIOPASDFGHJKLZXCVBNM'
#     c = [0] * 26
#     for i in range(26):
#         if s.rfind(alf[i]) != s.find(alf[i]):
#             c[i] = s.rfind(alf[i]) - s.find(alf[i])
#     return max(c)
#
#
# max1 = 0
# f = open('24_26.txt', 'r', encoding='utf-8')
# for line in f:
#     if line.count('G') < 25:
#         max1 = max(max1, Search(line))
# print(max1)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите наибольшую длину цепочки 
символов, среди которых нет символов K и L, стоящих рядом.
Например, в тексте ABCAABAKLD самая длинная цепочка символов, удовлетворяющая условию— ABCAABAK, её длина равна 8.'''
# f = open('24_27.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# k = 1
# max1 = 0
# for i in range(n - 1):
#     if (s[i] == 'K' and s[i + 1] == 'L') or (s[i + 1] == 'K' and s[i] == 'L'):
#         max1 = max(max1, k)
#         k = 1
#     else:
#         k += 1
# max1 = max(max1, k)
# print(max1)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC...Z). Определите максимальное количество
идущих подряд символов, среди которых нет ни одной буквы A и при этом не менее трёх букв E.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_32.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# m = 0
# k = 0
# ca = 0
# ce = 0
# n = len(s)
# for i in range(n):
#     if s[i] == "E":
#         ce += 1
#         k += 1
#     elif s[i] == "A":
#         if ce >= 3:
#             m = max(k, m)
#         k = 0
#         ce = 0
#     else:
#         k += 1
# if ce >= 3:
#     m = max(k, m)
# print(m)
#
'''Текстовый файл состоит из символов A, B и C.
Определите максимальное количество идущих подряд пар символов AB или CB в прилагаемом файле.
Искомая подпоследовательность должна состоять только из пар AB, или только из пар CB, или только из пар AB и CB в 
произвольном порядке следования этих пар.'''
# f = open('24_34.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# s = s.replace("AB", "J")
# s = s.replace("CB", "J")
# n = len(s)
# k = 0
# max1 = 0
# for i in range(n):
#     if s[i] == 'J':
#         k += 1
#     else:
#         max1 = max(k, max1)
#         k = 0
# max1 = max(k, max1)
# print(max1)

''''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите количество групп из идущих 
подряд не менее 12 символов, которые начинаются и заканчиваются буквой E и не содержат других букв E (кроме первой и 
последней) и букв F.'''
# f = open('24_35.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# s1 = ''
# k = 0
# q = 0
# n = len(s)
# for i in range(n):
#     if not q:
#         if s[i] == "E":
#             q = 1
#     else:
#         if s[i] == "E":
#             if s1.count('F') == 0 and len(s1) >= 10:
#                 k += 1
#             s1 = ''
#         else:
#             s1 += s[i]
# print(k)


'''Текстовый файл состоит из символов A, C, D, F и O.
Определите максимальное количество идущих подряд пар символов вида
согласная + гласная.'''
# f = open('24_37.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# k = 0
# max1 = 0
# a1 = 'CDF'
# a2 = 'AO'
# i = 0
# while i < n - 1:
#     if s[i] in a1 and s[i + 1] in a2:
#         k += 1
#         i += 2
#     else:
#         max1 = max(k, max1)
#         k = 0
#         i += 1
# max1 = max(k, max1)
# print(max1)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите максимальное количество идущих
подряд символов, среди которых не более одной буквы D.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_31.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# k = 0
# max1 = 0
# p = 0
# n = len(s)
# for i in range(n):
#     if s[i] == 'D':
#         max1 = max(max1, k + p + 1)
#         p = k
#         k = 0
#     else:
#         k += 1
# max1 = max(max1, k + p + 1)
# print(max1)


'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC...Z). Определите максимальное количество
идущих подряд символов, среди которых нет ни одной буквы E и при этом не менее трёх букв A.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью 
данного алгоритма.'''
# f = open('24_33.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# ce = 0
# ca = 0
# k = 0
# max1 = 0
# n = len(s)
# for i in range(n):
#     if s[i] == 'A':
#         ca += 1
#         k += 1
#     elif s[i] == "E":
#         if ca >= 3:
#             max1 = max(k, max1)
#         k = 0
#         ca = 0
#     else:
#         k += 1
# if ce >= 3:
#     max1 = max(k, max1)
# print(max1)

'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите количество групп из идущих 
подряд не менее 10 символов, которые начинаются и заканчиваются буквой A и не содержат других букв A (кроме первой и
последней) и букв B.'''
# f = open('24_36.txt', 'r', encoding='utf-8')
# s = f.readline()
# f.close()
# n = len(s)
# k = 0
# q = 0
# s1 = ''
# for i in range(n):
#     if not q:
#         if s[i] == "A":
#             q = 1
#     else:
#         if s[i] == "A":
#             if s1.count("B") == 0 and len(s1) >= 8:
#                 k += 1
#             s1 = ''
#         else:
#             s1 += s[i]
# print(k)













