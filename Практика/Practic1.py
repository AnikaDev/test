# ДЗ:
# Числа в задачах вводим с клавиатуры.

# 1. Дана сторона квадрата a. Найти его периметр P = 4*a. Найти его площадь S = a**2.
# a = int(input('Введите сторону квадрата: '))
# print(a * 4)
# print(a ** 2)

# 2. Даны два числа. Если оба числа положительные, то выдать их сумму,
# если оба числа отрицательные, то выдать их произведение,
# если числа положительное и отрицательное, то выдать квадрат положительного числа (number**2).
# x = int(input('Введите число 1: '))
# y = int(input('Введите число 2: '))
# if x > 0 and y > 0:
#     print(x + y)
# elif x < 0 and y < 0:
#     print(x * y)
# elif x < 0:
#     print(y ** 2)
# else:
#     print(x ** 2)

# 3. Даны два различных числа. Вычесть из большего числа меньшее и выдать разницу чисел.
# q = int(input('Введите число 1: '))
# w = int(input('Введите число 2: '))
# print(abs(q - w))

# if q > w:
#     print(q - w)
# elif w > q:
#     print(w - q)

# 4. Дано двузначное число вида ab. Вывести квадрат числа ba (ba**2)
# er = int(input('Введите двухзначное число: '))
# e = er // 10
# r = er % 10
# print((r * 10 + e) ** 2)

# er = input('Введите двухзначное число: ')
# print(int(er[1] + er[0]) ** 2)

# 5. Дано трёхзначной число. Вывести произведение его цифр. 257 -> 70
# tyu = int(input('Введите трехзначное число: '))
# t = tyu // 100
# yu = tyu % 100
# y = yu // 10
# u = yu % 10
# print(t*y*u)

# a1 = input()
# a2 = 1
# b1 = a1+str(a2)
# print(b1)
# print(type(b1))
#
# b2 = int(a1)+a2
# print (int(a1)+a2)
#
#
# tyu = input('Введите трехзначное число: ')
# print(int(tyu[0]) * int(tyu[1]) * int(tyu[2]))

#  решить через индексацию

# 6. Дано двузначное число вида ab. Если первая цифра чётная, то вывести сумму его цифр, если нечётное, то произведение.
# sd = int(input('Введите двухзначное число: '))
# s = sd // 10
# d = sd % 10
# if s % 2 == 0:
#     print(s + d)
# else:
#     print(s * d)
#
# sd = input('Введите двухзначное число: ')
# if int(sd[0]) % 2 == 0:
#     print(int(sd[0]) + int(sd[1]))
# else:
#     print(int(sd[0]) * int(sd[1]))



# 0. Даны три числа: 2 положительных и одно отрицательное. Выдать произведение положительных чисел.
# q = int(input('Введите значение q: '))
# w = int(input('Введите значение w: '))
# e = int(input('Введите значение e: '))
# if q < 0:
#     print(w * e)
# elif w < 0:
#     print(q * e)
# else:
#     print(q * w)

# 1. Даны три числа. Найти разность между максимальным и минимальным числом.
# a = int(input('Введите значение a: '))
# s = int(input('Введите значение s: '))
# d = int(input('Введите значение d: '))
# min1 = a
# max1 = a
# if s > a:
#     max1 = s
# if d > max1:
#     max1 = d
# if s < a:
#     min1 = s
# if d < min1:
#     min1 = d
# print(max1 - min1)

# 2. Даны три числа. Найти сумму двух наибольших из них.
# z = int(input('Введите значение z: '))
# x = int(input('Введите значение x: '))
# c = int(input('Введите значение c: '))
# if z > x:
#     z, x = x, z
# if z > c:
#     z, c = c, z
# print(x + c)

# поменять местами значение переменных без третьей переменной
# a = 5
# b = 7
# a += b
# b = a - b
# a -= b
# print(a, b)

# max1 = z
# max2 = x
# if x > z and x > c:
#     max1 = x
# if c > z and c > x:
#     max1 = c
# if x > c and x > z:
#     max2 = c
# if x > z and x > c:
#     max2 = z
# print('max1:'+str(max1))
# print('max2:'+str(max2))
# print(max1 + max2)

# 3. Дано натуральное число a из n цифр. Вывести к нему описание "Это n-значное число".
# a = input('Введите число: ')
# print('Это', str(len(a)) + '-значное число')

# 4. Дано число 0 < n < 100. Вывести верно фразу "На лугу пасётся ", n "корова/коровы/коров".
# a = input('Введите число коров: ')
# a1 = a
# tail = ''
# if len(a) == 1:
#     a = '0' + a
# if (a[1] == '1' and int(a) != 11) or int(a) == 1:
#     tail = 'a'
# elif (a[1] in '234' and int(a) > 20) or int(a) <= 4:
#     tail = 'ы'
# print('На лугу посется', a1, 'коров' + tail)

# garden = 'В нашем саду растут 20 яблонь и 15 груш.'
# 1. Заменить 20 на 35.
# print(garden.replace('20', '35'))

# 2. Поменять местами "яблонь" и "груш" используя replace.
# print(garden.replace('груш', 'яблонь', ).replace('яблонь', 'груш', 1))

# 3. В переменную мы получаем наше предложение garden. Нужно вывести  суммарное количество деревьев в саду. Цифры могут быть многозначными.
# sp = garden.split(' ')
# print(int(sp[4]) + int(sp[7]))

# 4. Поменять местами названия деревьев (могут быть любые), используя split и join.
# sp = garden.split()
# sp[5], sp[8] = sp[8].replace('.', ''), sp[5] + '.'
# print(' '.join(sp))

# 5. Квадратное уравнение имеет вид ax2 + bx + c = 0 на вход в переменную stroka мы получаем от пользователя уравнение,
# выдать значение коэффициентов a, b, c.
# Учитываем, что они могут быть многозначными.
# Например:
# stroka = '6x2 - 12x + 10 = 0'  # -> a = 6  b = -12  c = 10
# k = '-996x2 + 12x - 100 = 0'  # -> a = 6  b = -12  c = 10
# r = k.replace('x2', '').replace('- ', '-').replace('x', '').replace('+ ', '')  # замена текста
# y = r.split()
# print('a =', y[0], 'b =', y[1], 'c =', y[2])


#6. Решить уравнение ax+b=0. Мы получает от пользователя уравнение. Решите его и выведите целое значение x.
# Вывод должен быть именно в формате: "х=значение".
# Примеры:
# text = '2x+6=0'  # ->  x=-3
# text = '-12x+24=0'  # -> x=2
# text = '4x-100=0'  # -> x=25
# r = text.replace('x', '').replace('+', ' ').replace('-', ' -') .replace('=', ' =')
#          r = r.lstrip()
# y = r.split()
# a = int(y[0])
# b = int(y[1])
# print('x=' + str(-b // a))


# 1. Дано целое число. Посчитать количество нулей в числе.
#a = '1002' # -> 2
#a = '50' #-> 1
#a = '0020' #-> 1
# a = (input('Введите число: '))
# a = a.lstrip('0')
# r = a.replace('1','').replace('2','').replace('3','').replace('4','').replace('5','').replace('6','').replace('7','').replace('8','') .replace('9','')
# print(len(r))

# 2. Дано целое число. Посчитать количество нулей в конце числа.
# 401 -> 0
# 8007000 -> 3
# 0 -> 1
# a = input('Введите число: ')
# print(len(a) - len(a.rstrip('0')))

# 3. Дано целое число. Посчитать количество нулей в начале числа.
# 107 -> 0
# 0002001 -> 3
# 0 -> 1
# a = input('Введите число: ')
# print(len(a) - len(a.lstrip('0')))



# 4. Дан текст. Отредактировать его так, чтобы текст превратился в предложение, т.е. начинался с большой буквы и заканчивался точкой.
# Примеры:
# "greetings, friends." -> "Greetings, friends."
# "Greetings, friends" -> "Greetings, friends."
#a = "Greetings, friends." #-> "Greetings, friends."
#a = "welcome to New York"  # -> "Welcome to New York."
#a = input('Введите текст: ')
#print(a if a.istitle() else a.title())
# if a.istitle() and a[-1] == '.':
#     print(a)
# elif a.istitle() and a[-1] != '.':
#     print(a + '.')
# elif not a.istitle() and a[-1] != '.':
#     print(a.title() + '.')
# else:
#     print(a.title())

# 1. Напишите простой калькулятор, который считывает с пользовательского ввода три строки: первое число, второе число и операцию,
# после чего применяет операцию к введённым числам ("первое число" "операция" "второе число") и выводит результат на экран.
# Поддерживаемые операции: +, -, /, *.
# Если выполняется деление и второе число равно 0, необходимо выводить строку "Деление на 0 невозможно!".
# Пример:
# 2
# 7
# *
# 14
# a = float(input('Введите число: '))
# b = float(input('Введите число: '))
# c = input('Введите операцию: ')
# if c == '+':
#     print(a + b)
# elif c == '-':
#     print(a - b)
# elif c == '*':
#     print(a * b)
# elif b == 0:
#     print('Деление на 0 невозможно!')
# else:
#     print(a / b)



#
# 2. Дано четырёхзначное число. Если сумма первых двух цифр больше суммы третьей и четвёртой цифры,
# то вывести произведение крайних цифр числа, иначе вывести сумму второй и третьей цифры.
# a = input('Введите четырехзначное число: ')
# print(int(a[0]) * int(a[3]) if int(a[0]) + int(a[1]) > int(a[2]) + int(a[3]) else int(a[1]) + int(a[2]))

# 3. Исходные данные - время отправления и время прибытия автобуса. Найдите продолжительность поездки на автобусе.
# Вы можете рассчитывать, что вся поездка будет в течение одних суток. Дайте ответ в часах и минутах.
# '5:50, 7:40'  ->  '1:50'
# '5:50, 7:10'  ->  '1:20'
# a = str(input('Время отправления автобуса: '))
# b = str(input('Время прибытия автобуса: '))
# if len(a) == 4 and len(b) == 4:
#     x = abs(int(str(b[0])) - int(str(a[0])))
#     print(str(x) + ':' + str(abs(int(str(b[2] + b[3])) - int(str(a[2] + a[3])))))
# elif len(a) == 5 and len(b) == 4:
#     x = int(str(a[0] + a[1])) - int(str(b[0]))
#     print(str(x) + ':' + str(abs(int(str(b[2] + b[3])) - int(str(a[3] + a[4])))))
# elif len(a) == 4 and len(b) == 5:
#     x = int(str(b[0] + b[1])) - int(str(a[0]))
#     print(str(x) + ':' + str(abs(int(str(b[3] + b[4])) - int(str(a[2] + a[3])))))
# elif len(a) == 5 and len(b) == 5:
#  x = abs(int(str(a[0] + a[1])) - int(str(b[0] + b[1]))
#  print(str(x) + ':' + str(abs(int(str(b[3] + b[4])) - int(str(a[3] + a[4])))))


# 7. У учителя есть шоколадка размером n x m кусочков. Учитель решил разделить шоколадку справедливо, и каждому ученику будет
# дано одинаковое количество кусочков, а оставшееся останется у него.
# Может произойти, что от шоколадки ничего не останется, но ученики очень добросовестны, поэтому, если у учителя не будет кусочка,
# а у учеников будет больше одного, тогда каждый отдаст по одному своему кусочку, но если у учеников есть только один кусочек,
# тогда учителю ничего не дадут. Если шоколадка слишком маленькая для деления между всеми учениками, то деления не будет и всё останется у учителя.
# Зная количество учеников s, размер шоколада n, m, распечатайте, сколько кусочков получит каждый ученик и учитель.
# Данные приведены в следующем порядке: n, m, s.
# Вывод должен быть в виде: У учителя X плиток, у ученика Y плиток.
# s = int(input('Введите число учеников: '))
# n = int(input('Длина шоколада: '))
# m = int(input('Ширина шоколада: '))
# t = n * m
# k = t // s
# y = t % s
# if t == s:
#     print('Учитель-0')
#     print('Дети-' + str(k))
# elif t < s:
#     print('Дети-0')
#     print('Учитель-' + str(t))
# elif y == 0:
#     print('Дети-' + str(k - 1))
#     print('Учитель-' + str(s))
# else:
#     print('Дети-' + str(k))
#     print('Учитель-' + str(y))

# ДЗ, работа со списком:
# Есть произвольный список целых чисел:
# a = [15, 6, 17, 480, 9]
# 1. Посчитать сумму крайних элементов в списке.
# print(a[0] + a[-1])
# 2. Посчитать разницу между максимальным и минимальным элементом списка.
# print(max(a) - min(a))
# 3. Посчитать количество знаков в максимальном элементе.
# print(len(str(max(a))))
# 4. Посчитать сумму элементов чётных позиций списка.
# print(sum(a[1::2]))
# 5. Посчитать квадрат центрального элемента в списке.
# print(a[len(a) // 2] ** 2)

# ДЗ, работа со списком:
# spisok = [15, 6, 171, 48, 9, 7, 12, 90]
# 1. Вывести общую сумму двух первых и двух последних элементов списка.
# print(sum(a[:2] + a[-2:]))
# 2. Если сумма элементов на чётных позициях больше, вывести "Чётные победили", если на нечётных - "Нечётные победили".
# print("Нечётные победили" if sum(a[::2]) > sum(a[1::2]) else "Чётные победили")
# 3. Переставить последний элемент списка на первое место и вывести новый список. Использовать только функции работы со списком без слайсов.
# a.insert(0, a.pop())
# print(a)
# 4. C клавиатуры вводим через пробел 3 целых числа. Напишите программу, которая выводит в три строки: сначала максимальное,
# потом минимальное, после чего оставшееся число.
# a = input('Введите 3 числа: ')
# b = a.split()
# c = [int(b[0]), int(b[1]), int(b[2])]
# d = sorted(c, reverse=True)
# print(d[0])
# print(d[2])
# print(d[1])

# # ДЗ, квест-алгоритм (каждое решение в одну строку) со списком [2, 4, 6, 1]:
# s = [2, 4, 6, 1]
# # 1. Добавить 7 в середину списка.
# s.insert(2, 7)
# print(s)
#
# # 2. Удалить 6.
# # del s[3]
# s.remove(6)
# print(s)
# # 3. Вставить в начало списка сумму первого и последнего элементов.
# s.insert(0, s[0] + s[-1])
# print(s)
# # 4. Увеличить первый элемент списка на величину последнего элемента списка, удалив последний элемент.
# # s.insert(0, s.pop() + s[0])
# s[0] += s.pop()
# print(s)
# # 5. Продублировать элементы списка 2 раза.
# s *= 2
# print(s)
# # 6. Вывести общую сумму первых трёх и последних трёх элементов списка s.
# print(sum(s[:3] + s[-3:]))
# # 7. Создать список s2 из первого и последнего элемента s.
# s2 = [s[0], s[-1]]
# print(s2)
# # 8. В третий и четвёртый элементы s2 поместить сумму и произведение элементов s2 соответственно.
# s2.extend((s2[0] + s2[1], s2[0] * s2[1]))
# print(s2)
# # 9. К списку s прибавить элементы списка s2.
# s.extend(s2)
# print(s)
# # 10. К списку s прибавить буквы слова cat.
# s.extend('cat')
# print(s)
# # 11. Создать список s3 в котором будут только цифры s.
# s3 = s[:-3]
# print(s3)
# # 12. Отсортировать список s3 по убыванию.
# s3.sort(reverse=True)
# print(s3)
#
# # 13. Отзеркалить (развернуть) список s3.
# s3.reverse()
# print(s3)
# # 14. Вставить элементы списка s2 между первым и вторым элементом списка s3.
# # s3 = s3[:2] + s2 + s3[2:]
# s3[2: 2] = s2
# print(s3)
# # 15. Удалить все элементы s3 на нечётных позициях.
# # del s3[::2]
# s3 = s3[1::2]
# print(s3)
# # 16. Заменить последнее число в списке s3 на его цифры.
# s3 = s3[:-1], [sum(s3[:])]
# s3.insert(-1, )
# print(sum(s3, []))
# exit()
# 1. Ребёнку нужно из кубиков с буквами сложить предложение "мама мыла раму".
# Какие кубики с буквами ему понадобятся? (кубика "пробел" не существует)
# a = "мама мыла раму"
# # c = set(a)
# # c.remove(' ')
# print(set(a) - {' '})

# 2. В школе десятибальная система. У Егора за эту неделю были такие оценки
# a = [3, 4, 7, 5, 1, 5, 9, 2, 9, 10]  # Напечатать каких оценок у него не было.
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# b = range(2, 10, 3)
# b = range(1, 11)
# print(set(b) - set(a))

# 3. Егор любит ходить в лес. В первую неделю он был в лесу в такие дни ['пн', 'ср', 'чт', 'вс'],
# во вторую неделю ['вт', 'ср', 'чт', 'сб'], а в третью ['вт', 'ср', 'пт', 'вс'].
# Найти любимый день недели Егора для похода в лес.
# a = ['пн', 'ср', 'чт', 'вс']
# b = ['вт', 'ср', 'чт', 'сб']
# c = ['вт', 'ср', 'пт', 'вс']
# print(*set(a) & set(b) & set(c))

# В переменной chess мы получаем какой-то любой фрагмент шахматной партии.
# Например:
# chess = '1. d2 e6 2. e4 d5 3. Кc3 c5 4. Кf3 O-O 5. e:d5 e:d5 6. Сe2 Кf6 7. O-O Сe7 8. Сg5 Кc6 9. d:c5 Сe6 10. Кd4 С:c5 11. Кb3 Сe7 12. Сf3 Кe5 13. Лe1 К:f3+ 14. Ф:f3 Лc8 15. h3 h6'
# 0. Распечатать первый ход партии: 1. d2 e6   Найти как можно больше решений.


# 1. Подсчитать сколько раз в партии ходили слонами.

# 2. Если в партии было больше ходов слонами, чем ладьями - напечатать "Слоны были активнее",

# если ладьями, то напечатать "Ладьи были активнее".

# 3. Распечатать на каком ходу у белых была короткая рокировка: O-O.
# 4. Распечатать на каком ходу у чёрных была короткая рокировка: O-O.

# s = ['колобок', 23, 5, -6, 'лиса']
# # 1)Сделать 'хитрая лиса' из 'лиса' и поместить это после 'колобок'
# s.insert(1, 'хитрая ' + s.pop())
# print(s)
#
# # 2)Удалите элемент 'колобок' без использования del
# s.pop(0)
# print(s)
#
# # 3)Добавьте на второй элемент 11 не используя insert
# s[2: 2] = [11]
# print(s)
#
# # 4)Поместите в конец списка целую часть от деления (1-ого элемента на 2-ой) + 4-ый элемент
# s.extend([s[4] + s[1] // s[2]])
# print(s)
#
# # 5)Оставьте в списке s только цифры
# s = s[1:]
# print(s)
#
# # 6)Отсортируйте список по возрастанию
# s.sort()
# print(s)
#
# # 7)Увеличьте список в 3 раза и добавьте в конце 8
# s = s * 3 + [8]
# print(s)
#
# # 8)Выведите на экран количество элементов, равных -6
# r = s.count(-6)
# print(r)
#
# # 9)Добавьте на 3 место сумму всех элементов равных -6
# s.insert(2, r * -6)
# print(s)
#
# # 10)Создайте список s1 в котором будет каждый 3-ий элемент списка s и сумму всех четных элементов списка s(в начале)
# s1 = [sum(s[::2])] + s[::3]
# print(s1)
#
# # 11)Выведите на экран разность сумм списков s и s1
# print(sum(s) - sum(s1))
#
# # 12)Удалите из списка s1 первую -6
# s1.remove(-6)
# print(s1)
#
# # 13)Создайте список s3 из списка s1 и s2 и добавьте в конце элемент 'бесконечность'
# s3 = s + s1 + ['бесконечность']
# print(s3)
#
# # 14)Оставьте элемент бесконечность в переменной s3
# s3 = s3[-1]
# print(s3)
#
# # 15)Создайте список s4 из элемента списка s
# s4 = s.copy()
# print(s4)


# 7. У учителя есть шоколадка размером n x m кусочков. Учитель решил разделить шоколадку справедливо, и каждому ученику будет
# дано одинаковое количество кусочков, а оставшееся останется у него.
# Может произойти, что от шоколадки ничего не останется, но ученики очень добросовестны, поэтому, если у учителя не будет кусочка,
# а у учеников будет больше одного, тогда каждый отдаст по одному своему кусочку, но если у учеников есть только один кусочек,
# тогда учителю ничего не дадут. Если шоколадка слишком маленькая для деления между всеми учениками, то деления не будет и всё останется у учителя.
# Зная количество учеников s, размер шоколада n, m, распечатайте, сколько кусочков получит каждый ученик и учитель.
# Данные приведены в следующем порядке: n, m, s.
# Вывод должен быть в виде: У учителя X плиток, у ученика Y плиток.
# s = int(input('Введите число учеников: '))
# n = int(input('Длина шоколада: '))
# m = int(input('Ширина шоколада: '))
# t = n * m
# # k =  // s
# # y = t % s
# k, y = divmod(t, s)
# if y == 0 and k > 1:
#     y = s
#     k -= 1
# print(f'У учителя {y} плиток, у ученика {k} плиток')
# chess = '1. e:d2 d:e6 2. e4 d5 3. Кc3 c5 4. Кf3 O-O 5. e:d5 e:d5 6. Сe2 Кf6 7. O-O Сe7 8. Сg5 Кc6 9. d:c5 Сe6 10. Кd4 С:c5 11. Кb3 Сe7 12. Сf3 Кe5 13. Лe1 К:f3+ 14. Ф:f3 Лc8 15. h3 h6'
# 0. Распечатать первый ход партии: 1. d2 e6   Найти как можно больше решений.
# print(chess.replace('2. ', ' ')[:10])
# # 1. Подсчитать сколько раз в партии ходили слонами.
# print(chess.count('С'))
# chess1 = chess.split('С')
# print(len(chess1) - 1)
# # 2. Если в партии было больше ходов слонами, чем ладьями - напечатать "Слоны были активнее",
# # если ладьями, то напечатать "Ладьи были активнее".
# print("Слоны были активнее" if chess.count('С') > chess.count('Л') else "Ладьи были активнее")
# 3. Распечатать на каком ходу у белых была короткая рокировка: O-O.
# chess1 = chess.split('. O-O')
# print(chess1)
# print(chess1[0].split()[-1])
# 4. Распечатать на каком ходу у чёрных была короткая рокировка: O-O.
# chess1 = chess.split()
# print(chess1)
# chess2 = chess1[2::3]
# print(chess2)
# print(chess2.index('O-O') + 1)


# 1. Пользователь через пробел строкой вводит целые числа. Вывести количество уникальных чисел.
# a = '1 55 5 65 55 65 1 5' #->4
# print(len(set(a.split())))

# 2. Дан список из n чисел, одно из которых отлично от всех остальных, равных между собой. Определить порядковый номер числа, отличного от остальных.
# a = [1, 1, 5, 1]  # -> 3
# # a = [5, 5, 5, 5, 1, 5]  # -> 5
# # a = [2, 2, 2, 3, 2]
# print(a.index(5))
# print(a)


# 3. Придумать квест на множества (минимум 10 заданий).

# Даны 2 множества, связанных с погодой. Проделайте с ними указанные ниже действия.
# a = {'strong wind', 'snowstorm', 'tornado'}
# b = {'strong wind', 'snowstorm', 'tornado', 'sun', 'rainbow', 'breeze'}
# # 1)Удалите элемент 'кофе' в множестве a
# a.discard('кофе')
# print(a)
# # 2)Учитывая, что выходить на улицу стоит только при благоприятных погодных условиях, воспользовавшись множеством,
# # выведите на экран соответствующую для прогулок погоду, не вычитая множества друг из друга.
# print(b ^ a)
# # 3)Распечатайте погодные условия, (используя функции множества) при которых не стоит или
# # не желательно выходить из дома. (Стоит найти несколько вариантов записи)
# print(b & a)
# print(a.intersection(b))
# # 4)Дважды (разными способами) добавьте в множество а 'hurricane'
# a.add('hurricane')
# a.update({'hurricane'})
# a |= {'hurricane'}
# print(a)
# # 5)Распечатайте объединение множеств (а и в), вычтите их пересечение из объединения,
# # а после объедините с симметричной разницей.
# print(((a | b) - (a & b)) | (a ^ b))
# # 6)Случайным образом определите, в какую погоду вы пойдете гулять, при этом удалив выпавшую вам
# # погоду из множества b
# print(b, b.pop())
# # 7)Добавьте в множество a 364 и 51
# a.update({364, 51})
# print(a)
# # 8)Посчитайте и выведите на экран сколько элементов в списке a и в списке b
# print(len(a), len(b))
# # 9)Пусть в множестве a будет только элемент 'spring'
# a = {'spring'}
# print(a)
# 10)Удалите из множества a элемент 'snowstorm' используя remove
# a.remove('snowstorm')

# ДЗ:
# 0) Дан список из n чисел, одно из которых отлично от всех остальных, равных между собой.
# Определить порядковый номер числа, отличного от остальных.
# a = [7, 7, 5, 7, 7]  # -> 3
# a = [5, 5, 5, 5, 1, 5]  # -> 5
# print(a.index(min(a)) + 1 if a.count(min(a)) == 1 else a.index(max(a)) + 1)
# print(a.index(min(a, key=a.count)) + 1)

#  print(a.index(z[-1]) + 1 if z[-1] > z[-2] else a.index(z[0]) + 1)

# z = sorted(a)
# if z[-1] > z[-2]:
#     print(a.index(z[-1]) + 1)
# else:
#     print(a.index(z[0]) + 1)
# print(a.index(z[-1]) + 1 if z[-1] > z[-2] else a.index(z[0]) + 1)


# ДЗ, работа со словарём:
# 1) Данны данные по средним температурам в неделю трёх месяцев лета.
summer = {
    'Июнь': [20, 22, 24, 28],
    'Июль': [24, 25, 29, 32],
    'Август': [25, 28, 31, 29]}
# # 1. Вывести температуру первой недели лета.
# print(summer['Июнь'][0])
# 2. Вывести максимальную температуру в июне.
# d = sorted(summer['Июнь'])
# print(d[-1])
# print(max(summer['Июнь']))
# 3. Вывести минимальную температуру в июле.

# p = sorted(summer['Июль'])
# print(p[0])
# print(min(summer['Июль']))
# 4. Вывести максимальную температуру лета.
# r = sorted(summer['Август'])
# if p[-1] > d[-1] and p[-1] > r[-1]:
#     print(p[-1])
# elif d[-1] > p[-1] and d[-1] > r[-1]:
#     print(d[-1])
# else:
#     print(r[-1])
    #  Можно еще так
# if max(summer['Июнь']) > max(summer['Июль']) and max(summer['Июнь']) > max(summer['Август']):
#     print(max(summer['Июнь']))
# elif max(summer['Июль']) > max(summer['Июнь']) and max(summer['Июль']) > max(summer['Август']):
#     print(max(summer['Июль']))
# else:
#     print(max(summer['Август']))
# 5. Сравнить какой месяц был самый жаркий и вывести его название(суммировать температуры каждого месяца).
# c = sum(summer['Июнь'])
# a = sum(summer['Июль'])
# b = sum(summer['Август'])
# if c > a and c > b:
#     print('Июнь')
# elif b > c and b > a:
#     print('Июль')
# else:
#     print('Август')
# print(max(sum(summer.values())))
# 2) Единицы массы пронумерованы следующим образом: 1 — грамм, 2 — килограмм, 3 — центнер, 4 — тонна.
# Дан номер единицы массы n (целое число в диапазоне 1–4) и масса тела m в этих единицах (вещественное число).
# Найти массу тела в килограммах.
# n = 3
# m = 12  # -> Масса равна 1200.0 кг
# n = 1
# m = 100   # -> Масса равна 0.1 кг
# n = 2
# m = 36
# if n == 1:
#     m = m / 1000
# elif n == 2:
#     m = m
# elif n == 3:
#     m = m * 100
# else:
#     m = m * 1000
# print(f"Масса равна {m} кг")
# З, добавка: Словари + Циклы
# 1. У нас есть журнал оценок группы:
# magazine = {
#     'Иванов': [3, 7, 11, 10, 8],
#     'Петров': [6, 12, 4, 9, 9],
#     'Сидоров': [5, 10, 7, 5, 9]}
# Вывести "Лучший ученик Х, у него максимальный бал Y, минимальный бал Z". Лучший ученик определяется общей суммой баллов.
#
# ДЗ, списковые включения:
# 1. Мы получаем список от пользователя вида spisok = [5, 0, -1, 3, -2, 10, -12, -20, 30, 7]. Вывести все положительные числа кратные 5 через запятую.
# 2. Мы получаем список от пользователя вида spisok = [5, 0, -1, 3, -2]. Вывести наименьшее положительное число в списке.


#   Программа должна вывести сколько чисел вводилось до 0
# n = int(input())
# k = 0
# while n != 0:
#     k = k + 1
#     n = int(input())
# print(k)

#   Программа должна вывести сумму всех элементов последовательности, заканчивается 0
# n = int(input())
# k = 0
# while n != 0:
#     k = k + n
#     n = int(input())
# print(k)
#   Программа должна вывести среднюю сумму всех элементов последовательности, max, min заканчивается 0
#   Программа должна вывести среднюю сумму всех элементов последовательности, max, min заканчивается 0
# n = int(input())
# sum = 0
# size = 0
# min = None
# max = None
# while n != 0:
#     sum = sum + n
#     size = size + 1
#     n = int(input())
#     if max is None or n > max:
#          max = n
#     if min is None or n < min:
#          min = n
#
# if size == 0:
#     print("There are no input elements")
# else:
#     print(sum/size)
# print('min=', min)
# print('max', max)

# Натуральные числа a, b, c, называются числами Пифагора, если выполняется уравнение a * a + b * b == c * c
# Напечатать все числа Пифагора<n
# n = int(input())
# for a in range(1, n):
#     for b in range(1, n):
#         for c in range(1, n):
#             if a * a + b * b == c * c:
#                 print("a=", a, " b=", b, " c=", c)
#    Есть ли схожие цифры в числах m n
# m = input()
# n = input()
# result = False
# for mi in range(0, len(m)):
#     for ni in range(0, len(n)):
#         if m[mi] == n[ni]:
#             result = True
#             break
#     if result:
#         break
# print(result)




# n = input()
# count = None
# for i in range(len(n)-1, -1, -1):
# # for i in range(0, len(n)):
#    print(n[i])
#    if n[i] != '0':
#        count = 0
#    else:
# for ch in n:
#     print(ch)
#
# for i in range(0, len(n)):
#     print(n[i])



# n = int(input())
# k = 0
# for i in range(1, n):
#     k = k + (n + 1)/n
# print(k)


# n = int(input())
# k = 0
# c = 0
# s = 0
# for i in range(1, n):
#     c = c + cos(i)
#     s = s + sin(i)
#     k = k * (c/s)

